X, Y, W, S = map(int, input().split())

"""
가로 + 세로 = 대각선이므로
1. 가로 + 세로 < 대각선 일때
    - 단순하게 가로 + 세로 하면 됨! 대각선은 쓸 일이 없으니까
2. 가로 + 세로 >= 대각선 일때
    - 대각선으로 갈수 있을때까지 가고 남은 거리만 가로세로로 가면 됨!
    - 작은곳까지 갈때랑 큰곳까지 갈때? 그 중간 거리에서 멈추기? 
    - 아무튼 가로세로가 더 큰것이므로..?
3. 그냥 다 구한다음에 최소값 출력하자
"""
# 1. 가로 + 세로 < 대각선 일때
#     - 단순하게 가로 + 세로 하면 됨! 대각선은 쓸 일이 없으니까
result_1 = (X * W) + (Y * W)

# 2. 가로 + 세로 >= 대각선 일때
#     - 대각선으로 갈수 있을때까지 가고 남은 거리만 가로세로로 가면 됨!
#     - 문제는 언제까지 대각선? 고민해보자
#     - 최대한 가로 or 세로를 덜 쓸수 있을때까지 가는게 맞다. 근데 어차피 그 사이에 있으면 똑같지 않나?


# 대각선으로만 이동할 경우
if (X + Y) % 2 == 0:
    result_2 = max(X, Y) * S
# 대각선으로 끝까지 갔다가 한번 이동할 경우
else:
    result_2 = (max(X, Y) - 1) * S + W

# 대각선으로 가장 가까운 지점까지 갔다가 가로로 이동하는 경우
result_3 = (min(X, Y) * S) + (abs(X - Y) * W)

print(min(result_1, result_2, result_3))